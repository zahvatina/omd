'''
Kryazheva Daria
'''
import random
from time import sleep


def step1():
    print(
        '–£—Ç–∫–∞-–º–∞–ª—è—Ä ü¶Ü —Ä–µ—à–∏–ª–∞ –≤—ã–ø–∏—Ç—å –∑–∞–π—Ç–∏ –≤ –±–∞—Ä. '
        '–í–∑—è—Ç—å –µ–π –∑–æ–Ω—Ç–∏–∫? ‚òÇÔ∏è'
    )
    option = ''
    options = {'–¥–∞': True, '–Ω–µ—Ç': False}
    while option not in options:
        print('–í—ã–±–µ—Ä–∏—Ç–µ: {}/{}'.format(*options))
        option = input()
        if option == '–¥–∞':
            print('''–£—Ç–∫–∞ –¥–æ–±—Ä–∞–ª–∞—Å—å –¥–æ –±–∞—Ä–∞ –∏ –Ω–µ –ø—Ä–æ–º–æ–∫–ª–∞. –í –±–∞—Ä–µ –∑–≤–µ—Ä–∏ —Ä–µ—à–∏–ª–∏ —Ä–∞–∑–≤–ª–µ—á—å—Å—è –∏ —Å—ã–≥—Ä–∞—Ç—å –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—É—é –∏–≥—Ä—É. 

–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã: 4 –∑–≤–µ—Ä—è –∏–≥—Ä–∞—é—Ç –≤ –∏–≥—Ä—É. –¢—Ä–æ–µ –∏–∑ –Ω–∏—Ö –∑–Ω–∞—é—Ç –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ, –æ–Ω–∏ - –≥—Ä–∞–∂–¥–∞–Ω–µ, –æ–¥–∏–Ω –∑–≤–µ—Ä—å –Ω–µ –∑–Ω–∞–µ—Ç –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–∞, –æ–Ω - —à–ø–∏–æ–Ω. 
–í—Å–µ –∏–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –∑–∞–¥–∞—é—Ç –¥—Ä—É–≥—É —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –Ω–∏—Ö –¥–∞ –∏–ª–∏ –Ω–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –∑–∞–¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å –∫ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º—É –º–µ—Å—Ç—É.
–ó–∞–¥–∞—á–∞ –≥—Ä–∞–∂–¥–∞–Ω –≤—ã—á–∏—Å–ª–∏—Ç—å —à–ø–∏–æ–Ω–∞ –ø–æ —Ç–æ–º—É, –∫–∞–∫ –æ–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∑–∞–¥–∞—á–∞ —à–ø–∏–æ–Ω–∞ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ''')
        else:
            print('''–£—Ç–∫–∞ –ø—Ä–æ–º–æ–∫–ª–∞, –Ω–æ –≤ –±–∞—Ä–µ –µ–π –ª—é–±–µ–∑–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∏ —Ç–µ–ø–ª—ã–π –ø–ª–µ–¥. –ó–≤–µ—Ä–∏ —Ä–µ—à–∏–ª–∏ —Ä–∞–∑–≤–ª–µ—á—å—Å—è –∏ —Å—ã–≥—Ä–∞—Ç—å –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—É—é –∏–≥—Ä—É. 

–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã: 4 –∑–≤–µ—Ä—è –∏–≥—Ä–∞—é—Ç –≤ –∏–≥—Ä—É. –¢—Ä–æ–µ –∏–∑ –Ω–∏—Ö –∑–Ω–∞—é—Ç –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ, –æ–Ω–∏ - –≥—Ä–∞–∂–¥–∞–Ω–µ, –æ–¥–∏–Ω –∑–≤–µ—Ä—å –Ω–µ –∑–Ω–∞–µ—Ç –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–∞, –æ–Ω - —à–ø–∏–æ–Ω. 
–í—Å–µ –∏–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –∑–∞–¥–∞—é—Ç –¥—Ä—É–≥—É —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –Ω–∏—Ö –¥–∞ –∏–ª–∏ –Ω–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –∑–∞–¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å –∫ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º—É –º–µ—Å—Ç—É.
–ó–∞–¥–∞—á–∞ –≥—Ä–∞–∂–¥–∞–Ω –≤—ã—á–∏—Å–ª–∏—Ç—å —à–ø–∏–æ–Ω–∞ –ø–æ —Ç–æ–º—É, –∫–∞–∫ –æ–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∑–∞–¥–∞—á–∞ —à–ø–∏–æ–Ω–∞ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ –º–µ—Å—Ç–æ.''')
    sleep(20)
PREVIEW = '''–ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è, –≤–∞—à–∞ —Ä–æ–ª—å: {}.'''

PREVIEW_PLACE = '''–í–ù–ò–ú–ê–ù–ò–ï!!! –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –º–µ—Å—Ç–µ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º: {}.'''

PREVIEW_PLACE_SPY = '''–í–æ–∑–º–æ–∂–Ω—ã–µ –º–µ—Å—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–≥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≥—Ä–∞–∂–¥–∞–Ω–µ: \n{}\n'''

LOSE = [
    '''–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±—Ä–∞–ª–∏ —à–ø–∏–æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±—ã—Ç—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –∫ –¥–µ—Ç–∞–ª—è–º. –®–ø–∏–æ–Ω–æ–º –±—ã–ª: {}''',
    '''–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥—Ä—É–≥–∏–µ –∏–≥—Ä–æ–∫–∏ –Ω–∞—à–ª–∏ —à–ø–∏–æ–Ω–∞ –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –í–∞—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±—ã—Ç—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –∫ –¥–µ—Ç–∞–ª—è–º. –®–ø–∏–æ–Ω–æ–º –±—ã–ª: {}''',
    '''–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞—Å –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏!!! –í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å :)''',
    '''–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±—Ä–∞–ª–∏ –º–µ—Å—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±—ã—Ç—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ –∫ –¥–µ—Ç–∞–ª—è–º.'''
]

WINE = [
    '''–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –Ω–∞—à–ª–∏ —à–ø–∏–æ–Ω–∞!''',
    '''–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –º–µ—Å—Ç–æ!''',
]

PERSONS = [
    '''–õ–∏—Å–∞-–≤–∏–∑–∞–∂–∏—Å—Ç''',
    '''–ó–∞—è—Ü-–±–∞—Ä–∏—Å—Ç–∞''',
    '''–õ–µ–≤-–¥–∏–∑–∞–π–Ω–µ—Ä''',
]

QUESTION_SUDO = [
    '''{} –∑–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å: {}, {}''',
]

ANSWER_SUDO = [
    '''{} –æ—Ç–≤–µ—á–∞–µ—Ç: {}.'''
]

ANSWER_YOUR = '''–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å (–¥–∞/–Ω–µ—Ç): '''

VOTE_PREVIEW = '''–í—ã –≥–æ—Ç–æ–≤—ã –≤—ã–±—Ä–∞—Ç—å —à–ø–∏–æ–Ω–∞?'''

VOTE_YES = '''–ù–∞–∑–æ–≤–∏—Ç–µ –ø–æ–¥–æ–∑—Ä–µ–≤–∞–µ–º–æ–≥–æ: '''

VOTE_NO = '''–•–æ—Ä–æ—à–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–≥—Ä—É :)'''

PLACE_PREVIEW = '''–í—ã –≥–æ—Ç–æ–≤—ã –≤—ã–±—Ä–∞—Ç—å –º–µ—Å—Ç–æ?'''

PLACE_YES = '''–ù–∞–∑–æ–≤–∏—Ç–µ –º–µ—Å—Ç–æ: '''

PLACE_NO = '''–•–æ—Ä–æ—à–æ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∏–≥—Ä—É :)'''

PLACE_QUESTIONS = {
    '–ü–∞—Ä–∫': [
        '''–ß–∞—Å—Ç–æ –ª–∏ –≤—ã –≤—Å—Ç—Ä–µ—á–∞–µ—Ç–µ –∑–¥–µ—Å—å –¥–µ—Ç–µ–π?''',
        '''–ú–æ–∂–Ω–æ –ª–∏ —Ç–∞–º –Ω–∞–π—Ç–∏ –ª–∞—Ä–µ–∫ —Å –º–æ—Ä–æ–∂–µ–Ω—ã–º?''',
        '''–ú–æ–∂–Ω–æ —Ç–∞–º –∏—Å–∫—É–ø–∞—Ç—å—Å—è –≤ —Ñ–æ–Ω—Ç–∞–Ω–µ?''',
        '''–ï—Å—Ç—å –ª–∏ —Ç–∞–º –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã''',
        '''–ü–æ–µ–¥–µ–º —Ç—É–¥–∞ –∫–∞—Ç–∞—Ç—å—Å—è –Ω–∞ —Ä–æ–ª–∏–∫–∞—Ö?''',
    ],
    '–†—ã–±–∞–ª–∫–∞': [
        '''–ë—É–¥–µ—à—å –±—Ä–∞—Ç—å —Å —Å–æ–±–æ–π —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ?''',
        '''–ú–µ—á—Ç–∞–ª –ø–æ–π–º–∞—Ç—å –∑–æ–ª–æ—Ç—É—é —Ä—ã–±–∫—É?''',
        '''–ü—Ä–∏–≥–æ–¥—è—Ç—Å—è –≤—ã—Å–æ–∫–∏–µ —Å–∞–ø–æ–∂–∫–∏?''',
        '''–í–æ–∑—å–º–µ—à—å —Å —Å–æ–±–æ–π –ø–∞–ª–∞—Ç–∫—É?''',
        '''–ë–µ—Ä–µ–º —Å —Å–æ–±–æ–π –∫–æ—Ä–º?''',
    ],
    '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∑–∞–ª': [
        '''–í–æ–∑—å–º–µ—à—å –ø–∞—Ä–æ—á–∫—É –∫–∏–ª–æ–≥—Ä–∞–º–º?''',
        '''–ß–∞—Å—Ç–æ –∏–∑–º–µ—Ä—è–µ—à—å —Ç–∞–ª–∏—é?''',
        '''–û–¥–æ–ª–∂–∏—à—å —Ä–µ–∑–∏–Ω–∫–∏?''',
        '''–°—á–∏—Ç–∞–µ—à—å –∫–∞–ª–æ—Ä–∏–∏?''',
    ],
}

PLACES = ['–ü–∞—Ä–∫', '–†—ã–±–∞–ª–∫–∞', '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∑–∞–ª', '–ö–æ–Ω—Ü–µ—Ä—Ç–Ω—ã–π –∑–∞–ª', '–ê–∫–≤–∞–ø–∞—Ä–∫', '–¶–∏—Ä–∫', '–ö–∞—Ç–æ–∫', '–õ–µ—Å', '–ì–æ—Ä—ã', '–ë–æ–ª—å–Ω–∏—Ü–∞',
          '–ê–ø—Ç–µ–∫–∞', '–†—ã–Ω–æ–∫']

ROLES = ['–®–ø–∏–æ–Ω', '–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω']


class GameSpy:
    def __init__(self, role):
        self.role = role
        self.bots = PERSONS
        self.init_game_()
        self.step_num = 0
        self.good_places = list(PLACE_QUESTIONS.keys())
        self.game_flag = True

    def init_game_(self):
        random.shuffle(self.bots)
        if self.role == '–®–ø–∏–æ–Ω':
            self.spy = '–£—Ç–∫–∞-–º–∞–ª—è—Ä'
            self.persons = self.bots
        else:
            self.spy = self.bots[0]
            self.persons = self.bots[1:] + ['–£—Ç–∫–∞-–º–∞–ª—è—Ä']
        self.chain = [(_, False) for _ in self.persons] + [(self.spy, True)]
        random.shuffle(self.chain)

        self.place = random.choice(list(PLACE_QUESTIONS.keys()))

        if self.role == '–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω':
            print(PREVIEW_PLACE.format(self.place))
        else:
            print(PREVIEW_PLACE_SPY.format(', '.join(PLACES)))
        sleep(4)

    def start(self):
        while True:
            self.step_()
            if self.role == '–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω':
                if self.voite_spy_():
                    print('–ü–æ–∫–∞')
                    return
                if not self.game_flag:
                    print(LOSE[1].format(self.spy))
                    return
                continue
            else:
                if self.voite_place_():
                    print('–ü–æ–∫–∞')
                    return
                if self.game_flag:
                    continue
                else:
                    print(LOSE[2])
                    return

    def step_(self):
        for q_number in range(len(self.chain)):
            person1 = self.chain[q_number % len(self.chain)]
            person2 = self.chain[(q_number + 1) % len(self.chain)]
            place = random.choice(self.good_places)

            question = random.choice(PLACE_QUESTIONS[place])
            question_text = random.choice(QUESTION_SUDO)
            print(question_text.format(person1[0], person2[0], question))

            if person2[0] == '–£—Ç–∫–∞-–º–∞–ª—è—Ä':
                print(ANSWER_YOUR)
                answer = input()
            else:
                if person2[1]:
                    answer = random.choice(['–¥–∞', '–Ω–µ—Ç'])
                else:
                    answer = '–¥–∞' if self.place == place else '–Ω–µ—Ç'
            flag = True
            if answer == '–¥–∞' and not self.place == place or answer == '–Ω–µ—Ç' and self.place == place:
                flag = False
            self_flag = self.role == '–ì—Ä–∞–∂–¥–∞–Ω–∏–Ω' and not person2 == '–£—Ç–∫–∞-–º–∞–ª—è—Ä'
            self.game_flag = True if self.game_flag and flag else False
            self.game_flag = self_flag or self.game_flag
            print(random.choice(ANSWER_SUDO).format(person2[0], answer))
            print('----------------------------------')
            sleep(4)

    def voite_spy_(self):
        print(VOTE_PREVIEW)
        answer = input()
        if answer == '–¥–∞':
            print(VOTE_YES)
            answer = input()
            if self.spy == answer:
                print(WINE[0])
            else:
                print(LOSE[0].format(self.spy))
            return True
        else:
            print(VOTE_NO)
            return False

    def voite_place_(self):
        print(PLACE_PREVIEW)
        answer = input()
        if answer == '–¥–∞':
            print(PLACE_YES)
            answer = input()
            if self.place.lower() == answer.lower():
                print(WINE[1])
            else:
                print(LOSE[3])
            return True
        else:
            print(VOTE_NO)
            return False


if __name__ == '__main__':
    step1()
    while True:
        role = random.choice(ROLES)
        print(PREVIEW.format(role))
        game = GameSpy(role)
        game.start()
        print('''–í—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ?''')
        answer = input()
        if answer == '–¥–∞':
            print(chr(27) + "[2J")
            continue
        break
